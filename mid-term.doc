문제 1. API 인증키 발급 및 데이터 수집 (10점)
서울시 에코마일리지 에너지사용량 통계정보 Open API를 활용하여 데이터를 수집하시오.

1-1. 서울시 에코마일리지 에너지사용량 통계정보 Open API를( https://data.seoul.go.kr/dataList/OA-15361/S/1/datasetView.do )에서 API 신청 과정을 거쳐 인증키 를 발급받고, 발급받은 인증키 정보를 포함한 화면을 캡처하여 첨부하시오. (3점)

1-2. Python을 사용하여 API를 호출하는 코드를 작성하고, 2015년 1월부터 2024년 12월까지의 개 인 유형의 현년 전기, 가스, 수도, 지역난방 에너지 사용량 데이터를 수집하는 프로그램을 작성하 시오. API 호출 성공을 확인할 수 있는 실행 결과를 캡처하여 첨부하시오. (7점)

월별 json 데이터 수집은 다음의 url 형식을 사용
- http://openapi.seoul.go.kr:8088/{본인의 API 키}/json/energyUseDataSummaryInfo/1/5/{연도}/{월}
- 예시 (2015년 1월) :
http://openapi.seoul.go.kr:8088/{본인의 API 키}/json/energyUseDataSummaryInfo/1/5/2015/01

문제 2. 데이터 변환 및 전처리 (8점)
수집한 데이터를 분석에 적합한 형태로 변환하시오.

2-1. 수집한 JSON 형태의 데이터를 pandas DataFrame으로 변환하고, 데이터의 기본 정보를 출력 하는 코드와 실행 결과를 첨부하시오. (4점)

2-2. 연도별, 계절별 분석을 위해 날짜 컬럼을 활용하여 연도(year)와 계절(season) 컬럼을 추가하 는 전처리 코드를 작성하고, 변환 결과를 확인할 수 있는 출력 결과를 첨부하시오.
※ 계절 구분: 봄(3-5월), 여름(6-8월), 가을(9-11월), 겨울(12-2월) (4점)

문제 3. 데이터 시각화 (8점)
전처리된 데이터를 활용하여 다음의 시각화를 수행하시오.

3-1. 연도별 에너지 사용 총 사용량(전기+가스+수도+지역난방) 변화량을 선 그래프로 시각화하고, 그래프에 자신의 학번 뒤 4자리를 제목에 포함하여 저장하시오. (예: "연도별 에너지 사용 총액 변 화 - 1234") 시각화 코드와 생성된 그래프를 첨부하시오. (4점)

3-2. 계절별 가스 사용량 평균을 막대 그래프로 시각화하고, 각 막대에 구체적인 수치를 표시하시 오. 시각화 코드와 생성된 그래프를 첨부하시오. (4점)

문제 4. 데이터 분석 및 해석 (4점)
시각화 결과를 바탕으로 다음을 분석하고 설명하시오.

4. 연도별 에너지 사용량 변화에서 나타나는 주요 트렌드를 찾아 분석하고, 그 원인을 추론하여
200자 이내로 설명하시오. (4점)


--------------------------------
-	생성형 인공지능 사용 불가
-	제출파일 종류: 아래한글 또는 MS word 파일
※ PDF 파일 제출 불가
-	문제 1-2, 2~3은 반드시 파이썬 코드(텍스트)와 실행결과(캡쳐 이미지)를 제출
※ 제출 예시 참조
-	타 학생의 과제물과 표현이 일치할 경우 제공자 및 참조자 모두 감점 처리
-	빈 파일, 표지만 있는 파일, 타 과목 과제물 파일 등을 제출할 경우 0점 처리되므로 과제물
제출 직후 반드시 확인할 것
----
def get_year_months(): year_months = []
for year in range(2015, 2024+1):
for month in range(1,12+1): year_months.append(f'{year}{month:02d}')
return year_months

responses = []

for year_month in get_year_months():
# 데이터를 수집하고 responses에 추가

---
import requests

url = "http://apis.data.go.kr/B552584/ArpltnInforInqireSvc/getCtprvnRltmMesureDnsty" api_key = "a3ERY4puvBY*********************************************************"

params = {
'serviceKey': api_key, 'returnType': 'json', 'numOfRows': '100',
'pageNo': '1',
'sidoName': '서울',
'ver': '1.0'
}
response = requests.get(url, params=params) if response.status_code == 200:
print("api 호출 성공")
print(response.json()) else:
print(f"API 호출 실패: {response.status_code}")

